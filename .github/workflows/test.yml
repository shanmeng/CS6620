name: CI/CD Pipeline for PackMyBag

on:
  workflow_dispatch:
  # push:           
  #   branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-on-aws:
    runs-on: ubuntu-latest

    env:
      TF_DIR: ./Iac

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Terraform Init
      run: terraform init -input=false
      working-directory: ${{ env.TF_DIR }}

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
      working-directory: ${{ env.TF_DIR }}

    - name: Get Terraform Outputs
      id: tf_outputs
      run: |
        echo "ddb_table=$(terraform output -raw ddb_table)" >> $GITHUB_OUTPUT
        echo "s3_bucket=$(terraform output -raw s3_bucket)" >> $GITHUB_OUTPUT
      working-directory: ${{ env.TF_DIR }}
      
    - name: Run Application Integration Tests
      run: |
        echo "Starting application tests on AWS resources..."
        
        export DYNAMODB_TABLE=${{ steps.tf_outputs.outputs.ddb_table }}
        export S3_BUCKET=${{ steps.tf_outputs.outputs.s3_bucket }}
        export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
        export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        export AWS_REGION=${{ secrets.AWS_REGION }}
        
        chmod +x ./test.sh
        ./test.sh
        
    - name: Terraform Destroy
      if: always()
      run: terraform destroy -auto-approve -input=false
      working-directory: ${{ env.TF_DIR }}
