# docker-compose.test.yml
version: '3.8'

services:
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4567:4566"
    environment:
      - SERVICES=s3,dynamodb
      - DEFAULT_REGION=us-east-1
      - DOCKER_HOST_ADDRESS=localstack
      - DEBUG=1
    volumes:
      - "./.localstack:/tmp/localstack" # Ensure this path is correct if different on your host
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health?services=s3,dynamodb"]
      interval: 15s
      start_period: 60s
      timeout: 15s
      retries: 20

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      localstack:
        condition: service_healthy
    # Start of entrypoint definition. 'entrypoint' is indented 4 spaces from the left margin.
    entrypoint: |
      # This entire block (from '/bin/bash -c "') needs to be indented
      # AT LEAST 2 spaces MORE than 'entrypoint:'. I'm using 6 spaces for this line.
      /bin/bash -c "
        # The python command starts here. It needs to be indented at least 2 spaces MORE
        # than the '/bin/bash -c "' line. I'm using 8 spaces for this line.
        python -c '
# All lines of the Python script should be indented consistently by 2 more spaces
# than the line above (total 10 spaces from the left margin).


import os
import time
import requests
import sys

endpoint = os.getenv(\"DYNAMODB_ENDPOINT\", \"http://localstack:4566\")
print(f\"Waiting for LocalStack DynamoDB and S3 at {endpoint}...\")

max_attempts = 40 # Increased attempts to 40 (40 * 5s = 200s = ~3.3 minutes wait)
attempts = 0
while attempts < max_attempts:
    try:
        # These lines are indented 12 spaces.
        response = requests.get(f\"{endpoint}/_localstack/health?services=s3,dynamodb\", timeout=5)
        response.raise_for_status()
        health_data = response.json().get(\"services\", {})
        s3_status = health_data.get(\"s3\")
        dynamodb_status = health_data.get(\"dynamodb\")

        if s3_status == \"running\" and dynamodb_status == \"running\":
            print(\"LocalStack S3 and DynamoDB are running!\")
            sys.exit(0) # Exit Python script successfully
        else:
            print(f\"LocalStack services not fully ready. S3: {s3_status}, DynamoDB: {dynamodb_status}. Retrying...\")
    except requests.exceptions.ConnectionError:
        print(\"Connection error, retrying...\")
    except requests.exceptions.RequestException as e:
        print(f\"Request failed: {e}. Retrying...\")
    
    time.sleep(5) # Wait 5 seconds before next attempt
    attempts += 1

print(\"LocalStack services did not become healthy in time after multiple attempts. Exiting.\")
sys.exit(1) # Exit Python script with failure
        ' # End of Python script. This closing single quote aligns with the opening one.
        
        # The '&& pytest test_api.py' part should align with the 'python -c' line.
        # This line is indented 8 spaces.
        && pytest test_api.py
      " # End of /bin/bash -c "..." string. This closing double quote aligns with the opening one.
